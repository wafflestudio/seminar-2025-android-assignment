// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton backButton;

  @NonNull
  public final Button continueButton;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final ImageView slackLogoImage;

  @NonNull
  public final LinearLayout topBarContainer;

  @NonNull
  public final TextView workspaceLabelText;

  @NonNull
  public final EditText workspaceUrlEdittext;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull ImageButton backButton,
      @NonNull Button continueButton, @NonNull ConstraintLayout main,
      @NonNull ImageView slackLogoImage, @NonNull LinearLayout topBarContainer,
      @NonNull TextView workspaceLabelText, @NonNull EditText workspaceUrlEdittext) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.continueButton = continueButton;
    this.main = main;
    this.slackLogoImage = slackLogoImage;
    this.topBarContainer = topBarContainer;
    this.workspaceLabelText = workspaceLabelText;
    this.workspaceUrlEdittext = workspaceUrlEdittext;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_button;
      ImageButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.continue_button;
      Button continueButton = ViewBindings.findChildViewById(rootView, id);
      if (continueButton == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.slack_logo_image;
      ImageView slackLogoImage = ViewBindings.findChildViewById(rootView, id);
      if (slackLogoImage == null) {
        break missingId;
      }

      id = R.id.top_bar_container;
      LinearLayout topBarContainer = ViewBindings.findChildViewById(rootView, id);
      if (topBarContainer == null) {
        break missingId;
      }

      id = R.id.workspace_label_text;
      TextView workspaceLabelText = ViewBindings.findChildViewById(rootView, id);
      if (workspaceLabelText == null) {
        break missingId;
      }

      id = R.id.workspace_url_edittext;
      EditText workspaceUrlEdittext = ViewBindings.findChildViewById(rootView, id);
      if (workspaceUrlEdittext == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, backButton, continueButton, main,
          slackLogoImage, topBarContainer, workspaceLabelText, workspaceUrlEdittext);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
